document.addEventListener("DOMContentLoaded", function () {

    // Array de palavras com informa√ß√µes de s√≠labas, emoji e palavra completa
    const words = [
        { syllables: ["BA", "NA", "NA"], emoji: "üçå", word: "BANANA" },
        { syllables: ["CA", "SA"], emoji: "üè†", word: "CASA" },
        { syllables: ["CA", "CHOR", "RO"], emoji: "üê∂", word: "CACHORRO" },
        { syllables: ["GA", "TO"], emoji: "üê±", word: "GATO" },
        { syllables: ["GI", "RA", "FA"], emoji: "ü¶í", word: "GIRAFA" },
        { syllables: ["E", "LE", "FAN", "TE"], emoji: "üêò", word: "ELEFANTE" },
        { syllables: ["CAR", "RO"], emoji: "üöó", word: "CARRO" },
        { syllables: ["BA", "LEI", "A"], emoji: "üêã", word: "BALEIA" },
        { syllables: ["LI", "VRO"], emoji: "üìñ", word: "LIVRO" },
        { syllables: ["JA", "CA", "R√â"], emoji: "üêä", word: "JACAR√â" },
        { syllables: ["MO", "TO", "CI", "CLE", "TA"], emoji: "üèçÔ∏è", word: "MOTOCICLETA" },
        { syllables: ["A", "VI", "√ÉO"], emoji: "‚úàÔ∏è", word: "AVI√ÉO" },
        { syllables: ["√ÅR", "VO", "RE"], emoji: "üå≥", word: "√ÅRVORE" },
        { syllables: ["ON", "DA"], emoji: "üåä", word: "ONDA" },
        { syllables: ["TAR", "TA", "RU", "GA"], emoji: "üê¢", word: "TARTARUGA" },
        { syllables: ["A", "RA", "NHA"], emoji: "üï∑Ô∏è", word: "ARANHA" },
        { syllables: ["GA", "LO"], emoji: "üêì", word: "GALO" },
        { syllables: ["SA", "PA", "TO"], emoji: "üëü", word: "SAPATO" },
        { syllables: ["TE", "LE", "VI", "S√ÉO"], emoji: "üì∫", word: "TELEVIS√ÉO" },
        { syllables: ["BI", "CI", "CLE", "TA"], emoji: "üö¥", word: "BICICLETA" },
        { syllables: ["MO", "CHI", "LA"], emoji: "üéí", word: "MOCHILA" },
        { syllables: ["SOR", "RI", "SO"], emoji: "üòä", word: "SORRISO" },
        { syllables: ["L√Å", "PIS"], emoji: "‚úèÔ∏è", word: "L√ÅPIS" },
        { syllables: ["CA", "DEI", "RA"], emoji: "ü™ë", word: "CADEIRA" },
        { syllables: ["TE", "LE", "FO", "NE"], emoji: "üìû", word: "TELEFONE" },
        { syllables: ["P√ÅS", "SA", "RO"], emoji: "üê¶", word: "P√ÅSSARO" },
        { syllables: ["CE", "RE", "JA"], emoji: "üçí", word: "CEREJA" },
        { syllables: ["LI", "M√ÉO"], emoji: "üçã", word: "LIM√ÉO" },
        { syllables: ["CO", "RA", "√á√ÉO"], emoji: "‚ù§Ô∏è", word: "CORA√á√ÉO" },
        { syllables: ["BAR", "CO"], emoji: "‚õµ", word: "BARCO" }

    ];

    // Vari√°veis globais
    let currentWordIndex = Math.floor(Math.random() * words.length); // √çndice da palavra atual
    let formedSyllables = []; // S√≠labas formadas pelo jogador
    let score = 0; // Pontua√ß√£o do jogador
    const maxStars = 10; // M√°ximo de estrelas para o rating

    // Elementos do DOM
    const hintArea = document.getElementById("hintArea");
    const syllablesContainer = document.getElementById("syllablesContainer");
    const wordFormationArea = document.getElementById("wordFormationArea");
    const scoreDisplay = document.getElementById("score");
    const messageArea = document.getElementById("messageArea");
    const restartArea = document.getElementById("restartArea");
    const restartButton = document.getElementById("restartButton");
    const starRating = document.getElementById("starRating");

    // Mostra mensagem na √°rea de mensagem
    function showMessage(message) {
        messageArea.textContent = message;
    }

    // Atualiza a exibi√ß√£o das estrelas de acordo com a pontua√ß√£o
    function updateStarRating() {
        const stars = "‚≠êÔ∏è".repeat(score) + "‚òÜ".repeat(maxStars - score);
        starRating.textContent = stars;
    }

    // Fun√ß√£o para embaralhar um array
    function shuffleArray(array) {
        let originalArray = array.slice(); // Cria uma c√≥pia do array original
        do {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]]; // Troca os elementos aleatoriamente
            }
        } while (array.join('') === originalArray.join('')); // Garante que o array n√£o seja apenas reordenado
    }

    // Preenche a √°rea de s√≠labas com as s√≠labas embaralhadas da palavra atual
    function populateSyllables() {
        const syllables = [...words[currentWordIndex].syllables]; // Copia as s√≠labas da palavra atual
        shuffleArray(syllables); // Embaralha as s√≠labas
        hintArea.innerHTML = ''; // Limpa a √°rea de dica
        hintArea.textContent = words[currentWordIndex].emoji; // Exibe o emoji da palavra

        syllablesContainer.innerHTML = ''; // Limpa o container de s√≠labas
        formedSyllables = []; // Reseta as s√≠labas formadas

        // Cria divs para cada s√≠laba embaralhada e as adiciona ao container
        syllables.forEach(syllable => {
            const div = document.createElement("div");
            div.textContent = syllable;
            div.setAttribute("draggable", true); // Permite que as s√≠labas sejam arrast√°veis
            div.addEventListener("dragstart", handleDragStart); // Adiciona um listener para o evento de arrastar
            syllablesContainer.appendChild(div);
        });
    }

    // Fun√ß√£o para lidar com o in√≠cio do arrastar de uma s√≠laba
    function handleDragStart(event) {
        event.dataTransfer.setData("text", event.target.textContent); // Define o dado que ser√° arrastado
        event.target.classList.add("dragging"); // Adiciona a classe 'dragging' ao elemento sendo arrastado
    }

    // Listener para o evento de 'dragover' na √°rea de forma√ß√£o da palavra
    wordFormationArea.addEventListener("dragover", function(event) {
        event.preventDefault(); // Previne o comportamento padr√£o
    });

    // Listener para o evento de 'drop' na √°rea de forma√ß√£o da palavra
    wordFormationArea.addEventListener("drop", function(event) {
        event.preventDefault(); // Previne o comportamento padr√£o
        const syllable = event.dataTransfer.getData("text"); // Obt√©m a s√≠laba arrastada
        formedSyllables.push(syllable); // Adiciona a s√≠laba ao array de s√≠labas formadas

        // Cria uma div com a s√≠laba e a adiciona √† √°rea de forma√ß√£o da palavra
        const div = document.createElement("div");
        div.textContent = syllable;
        wordFormationArea.appendChild(div);

        checkCompletion(); // Verifica se a palavra est√° completa

        const draggedElement = document.querySelector(".dragging");
        draggedElement.parentNode.removeChild(draggedElement); // Remove o elemento arrastado da caixa de origem
    });

    // Fun√ß√£o para reproduzir um som com base no ID do √°udio
    function playSound(soundId) {
        const audio = document.getElementById(soundId);
        audio.play();
    }

    // Verifica se a palavra est√° completa e atualiza a pontua√ß√£o
    function checkCompletion() {
        if (formedSyllables.length === words[currentWordIndex].syllables.length) {
            const formedWord = formedSyllables.join('');
            if (formedWord === words[currentWordIndex].word) { // Verifica se a palavra formada est√° correta
                score += 1; // Incrementa a pontua√ß√£o
                if (score <= maxStars) {
                    updateStarRating(); // Atualiza o rating de estrelas
                }
                showMessage(`Parab√©ns! A palavra "${formedWord}" est√° correta. Estrelas: ${score}`);
                if (score < maxStars) {
                    playSound('audio-acerto'); // Toca o som de acerto
                }
                nextWord(); // Passa para a pr√≥xima palavra
            } else {
                showMessage(`A palavra "${formedWord}" est√° incorreta. Estrelas ${score}.`);
                playSound('audio-erro'); // Toca o som de erro
                restartArea.style.display = "block"; // Mostra a √°rea de rein√≠cio
            }
        }
    }

    // Passa para a pr√≥xima palavra ou finaliza o jogo se o jogador alcan√ßar a pontua√ß√£o m√°xima
    function nextWord() {
        if (score >= maxStars) {
            showMessage(`Incr√≠vel! Voc√™ completou todas as palavras! Estrelas: ${score}`);
            playSound('audio-winner'); // Toca o som de vit√≥ria
            restartArea.style.display = "block"; // Mostra a √°rea de rein√≠cio
        } else {
            currentWordIndex = (currentWordIndex + 1) % words.length; // Avan√ßa para a pr√≥xima palavra
            resetGame(); // Reinicia o jogo com a pr√≥xima palavra
        }
    }

    // Reinicia o jogo com a palavra atual
    function resetGame() {
        formedSyllables = []; // Reseta as s√≠labas formadas
        wordFormationArea.innerHTML = ""; // Limpa a √°rea de forma√ß√£o da palavra
        populateSyllables(); // Preenche a √°rea de s√≠labas com a pr√≥xima palavra
        restartArea.style.display = "none"; // Oculta a √°rea de rein√≠cio
    }

    // Listener para o bot√£o de rein√≠cio
    restartButton.addEventListener("click", function() {
        score = 0; // Zera a pontua√ß√£o
        updateStarRating(); // Atualiza o rating de estrelas
        resetGame(); // Reinicia o jogo
    });

    populateSyllables(); // Inicia o jogo populando as s√≠labas da primeira palavra
});


// Fun√ß√£o para controlar a reprodu√ß√£o/pausa do √°udio
var audio = document.getElementById("audio");
var isPlaying = false;

function toggleAudio() {
    if (isPlaying) {
        audio.pause(); // Pausa o √°udio
        isPlaying = false;
    } else {
        audio.play(); // Reproduz o √°udio
        isPlaying = true;
    }
}
